### 測試 API 端點
@baseUrl = http://localhost:4400/api/v1
@token = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiJjbTU0MXluY3MwMDAwa3hkMWwyejVpZjZ3IiwiZW1haWwiOiJ0ZXN0QGV4YW1wbGUuY29tIiwiaWF0IjoxNzM1ODI0NTYzLCJleHAiOjE3MzU4MjgxNjN9.F-0V_grcCL2cX0xFGHNKzKu5Rn0kJ9jhxjEKPQpyJ4o

### 健康檢查
GET http://localhost:4400/health

### 登入
POST {{baseUrl}}/auth/login
Content-Type: application/json

{
  "email": "test@example.com",
  "password": "password123"
}

### 取得專案列表
GET {{baseUrl}}/projects
Authorization: {{token}}

### 建立新專案
POST {{baseUrl}}/projects
Authorization: {{token}}
Content-Type: application/json

{
  "name": "測試專案",
  "description": "用於測試系統分析功能",
  "version": "1.0.0"
}

### 建立模組
POST {{baseUrl}}/projects/PROJECT_ID/modules
Authorization: {{token}}
Content-Type: application/json

{
  "name": "身份驗證模組",
  "description": "處理使用者登入和身份驗證"
}

### 建立 UC
POST {{baseUrl}}/modules/MODULE_ID/use-cases
Authorization: {{token}}
Content-Type: application/json

{
  "title": "使用者登入",
  "category": "身份驗證",
  "description": "使用者透過帳號密碼登入系統",
  "preconditions": ["使用者已註冊"],
  "postconditions": ["使用者成功登入"],
  "mainFlow": [
    {
      "id": "step-1",
      "order": 1,
      "action": "輸入帳號密碼",
      "description": "使用者在登入頁面輸入帳號和密碼"
    }
  ],
  "businessRules": ["密碼錯誤超過5次鎖定帳號"],
  "acceptanceCriteria": ["正確帳密可登入"],
  "notes": []
}

### 建立循序圖
POST {{baseUrl}}/sequences
Authorization: {{token}}
Content-Type: application/json

{
  "projectId": "PROJECT_ID",
  "title": "登入流程",
  "category": "身份驗證",
  "content": "sequenceDiagram\n    User->>System: Login"
}

### 建立 API 合約
POST {{baseUrl}}/api-contracts
Authorization: {{token}}
Content-Type: application/json

{
  "projectId": "PROJECT_ID",
  "title": "登入 API",
  "method": "POST",
  "endpoint": "/api/auth/login",
  "description": "使用者登入端點",
  "parameters": {
    "body": [
      {
        "name": "email",
        "type": "string",
        "required": true,
        "description": "使用者信箱"
      }
    ]
  },
  "responses": [
    {
      "statusCode": 200,
      "description": "登入成功"
    }
  ]
}

### 建立 DTO
POST {{baseUrl}}/dto-schemas
Authorization: {{token}}
Content-Type: application/json

{
  "projectId": "PROJECT_ID",
  "name": "UserDTO",
  "description": "使用者資料物件",
  "properties": [
    {
      "name": "id",
      "type": "string",
      "required": true,
      "description": "使用者 ID"
    }
  ]
}